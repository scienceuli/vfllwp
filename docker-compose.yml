version: "3.9"

services:
  db:
    container_name: wp_db
    image: mysql:8.0
    volumes:
      - ./database:/var/lib/mysql
      - ./mysqldumps/backup.sql.gz:/docker-entrypoint-initdb.d/backup.sql.gz
      - ./init/migrate.sh:/docker-entrypoint-initdb.d/migrate.sh
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $db_root_password
      MYSQL_DATABASE: $db_name
      MYSQL_USER: $db_user
      MYSQL_PASSWORD: $db_password
      WORDPRESS_TABLE_PREFIX: $db_table_prefix
      PRODUCTION_URL: $production_url

  wordpress:
    container_name: wordpress
    depends_on:
      - db
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./wordpress/wp-content:/var/www/html/wp-content
    restart: always
    environment:
      WORDPRESS_DB_HOST: $db_host
      WORDPRESS_DB_USER: $db_user
      WORDPRESS_DB_PASSWORD: $db_password
      WORDPRESS_TABLE_PREFIX: $db_table_prefix
      WORDPRESS_DEBUG: $wp_debug_mode
      DISABLED_PLUGINS: $wp_plugins_to_disable
      VIRTUAL_HOST: $domain
      LETSENCRYPT_HOST: $domain
      LETSENCRYPT_EMAIL: $letsencrypt_email
      WP_HOME: $production_url
      WP_SITEURL: $production_url

  nginx:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./wordpress:/usr/share/nginx/html
    depends_on:
      - wordpress

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./wordpress:/usr/share/nginx/html
    environment:
      DEFAULT_EMAIL: $letsencrypt_email
      NGINX_PROXY_CONTAINER: nginx-proxy

  
